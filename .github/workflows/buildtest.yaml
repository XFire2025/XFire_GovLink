name: Build, Test, and Deploy GovLink Frontend

on:
  push:
    branches:
      - main
      - dev
      - CI-CD
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    # This output will tell the next job if the artifact was created successfully
    outputs:
      build_success: ${{ steps.upload_artifact.outcome == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js with dependency caching
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Install dependencies
        run: npm ci

      - name: Build with OpenNext
        env:
          # This block maps the GitHub Secrets you created to the environment variables
          # that your Next.js application expects to find.
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MAIL_ID: ${{ secrets.MAIL_ID }}
          MAIL_PW: ${{ secrets.MAIL_PW }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
          
          # We force NODE_ENV to production for the build
          NODE_ENV: production
          # You should replace this with your actual production URL
          NEXT_PUBLIC_APP_URL: "https://your-production-url.com" 
        run: npm run build:deploy

      - name: Upload OpenNext build artifact
        id: upload_artifact
        uses: actions/upload-artifact@v4
        with:
          name: open-next-build
          path: .open-next # This directory should now be created successfully

  deploy-to-aws:
    needs: build
    # This job will only run if the build job was successful and on a push to a deployable branch
    if: needs.build.outputs.build_success == 'true' && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/CI-CD')
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Best practice for AWS auth, though we are using keys for now
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install All Dependencies (including dev for CDK)
        run: npm ci

      - name: Download OpenNext build artifact
        uses: actions/download-artifact@v4
        with:
          name: open-next-build
          path: . 

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk

      - name: Bootstrap CDK (if needed)
        run: cdk bootstrap --require-approval never

      - name: Deploy with CDK
        run: cdk deploy --all --require-approval never